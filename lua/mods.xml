<Layer Type="ActorFrame" InitCommand="%m_prefix(function(self)
if init then init = nil return end -- prevent init frum running twice
init = true

--[[
	regular mods usage
		{start, end, 'mods' [, pn, timing]} OR {start, 'mods' [, pn]}
	example usage
		{2, 10, '*-1 100 drunk'}
			🡤 applies 100% drunk from beats 2 to 12
		{2, 10, '*-1 tipsy', pn = 1, timing = 'end'}
			🡤 applies 100% tipsy on player 1 from beats 2 to 10
		{5, '*-1 1000 zoomz', pn = {1, 4, 2}}
			🡤 applies 1000% zoomz for one frame on players 1, 2, and 4
	optional inputs
		- pn: can be a player number or a table of player numbers
			defaults to all players
		- timing: sets the end type to either 'len' or 'end'
			defaults to 'len'

	function
		{start, function [, persist, timing, func_if_persist]}
	optional inputs
		- persist: can be a boolean or a number, specifying the range to run the function if playback is started after the starting point in the editor
		- timing: if using persist as a number, sets the range of beats the function will run to be either 'len' or 'end'
		- func_if_persist: if using persist, will run the function specified instead of the first function
]]

init_mods = 'clearall, *-1 overhead, *-1 2x, *-1 -100 drawsizeback, stealthpastreceptors, *-1 zbuffer, approachtype, *-1 -100 spiralholds, *-1 200 modtimer, *-1 halgun, *-1 dizzyholds, *-1 2500 grain, *-1 disablemines'
GAMESTATE:ApplyModifiers(init_mods)
mod {0, 9E9, init_mods}
end)"
OnCommand="queuecommand,🦉;luaeffect,🐑" 🦉Command="%m_prefix.set" 🐑Command="%m_prefix.update"/>